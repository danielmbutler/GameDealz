// Generated by Dagger (https://dagger.dev).
package com.dbtechprojects.gamedeals.repository;

import com.dbtechprojects.gamedeals.data.GameApi;
import com.dbtechprojects.gamedeals.database.GameDAO;
import com.dbtechprojects.gamedeals.util.LocalStorage;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DefaultRepository_Factory implements Factory<DefaultRepository> {
  private final Provider<GameApi> apiProvider;

  private final Provider<GameDAO> gameDaoProvider;

  private final Provider<LocalStorage> datastoreProvider;

  public DefaultRepository_Factory(Provider<GameApi> apiProvider, Provider<GameDAO> gameDaoProvider,
      Provider<LocalStorage> datastoreProvider) {
    this.apiProvider = apiProvider;
    this.gameDaoProvider = gameDaoProvider;
    this.datastoreProvider = datastoreProvider;
  }

  @Override
  public DefaultRepository get() {
    return newInstance(apiProvider.get(), gameDaoProvider.get(), datastoreProvider.get());
  }

  public static DefaultRepository_Factory create(Provider<GameApi> apiProvider,
      Provider<GameDAO> gameDaoProvider, Provider<LocalStorage> datastoreProvider) {
    return new DefaultRepository_Factory(apiProvider, gameDaoProvider, datastoreProvider);
  }

  public static DefaultRepository newInstance(GameApi api, GameDAO gameDao,
      LocalStorage datastore) {
    return new DefaultRepository(api, gameDao, datastore);
  }
}
