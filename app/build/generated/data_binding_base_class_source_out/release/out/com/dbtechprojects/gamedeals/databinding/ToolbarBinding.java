// Generated by view binder compiler. Do not edit!
package com.dbtechprojects.gamedeals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.dbtechprojects.gamedeals.R;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout FragmentStore;

  @NonNull
  public final ChipGroup StoreFragmentchipGroup;

  @NonNull
  public final RecyclerView StoreFramgnetRecyclerView;

  @NonNull
  public final HorizontalScrollView horizontalScrollView;

  private ToolbarBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout FragmentStore,
      @NonNull ChipGroup StoreFragmentchipGroup, @NonNull RecyclerView StoreFramgnetRecyclerView,
      @NonNull HorizontalScrollView horizontalScrollView) {
    this.rootView = rootView;
    this.FragmentStore = FragmentStore;
    this.StoreFragmentchipGroup = StoreFragmentchipGroup;
    this.StoreFramgnetRecyclerView = StoreFramgnetRecyclerView;
    this.horizontalScrollView = horizontalScrollView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      FrameLayout FragmentStore = (FrameLayout) rootView;

      id = R.id.StoreFragmentchipGroup;
      ChipGroup StoreFragmentchipGroup = rootView.findViewById(id);
      if (StoreFragmentchipGroup == null) {
        break missingId;
      }

      id = R.id.StoreFramgnetRecyclerView;
      RecyclerView StoreFramgnetRecyclerView = rootView.findViewById(id);
      if (StoreFramgnetRecyclerView == null) {
        break missingId;
      }

      id = R.id.horizontalScrollView;
      HorizontalScrollView horizontalScrollView = rootView.findViewById(id);
      if (horizontalScrollView == null) {
        break missingId;
      }

      return new ToolbarBinding((FrameLayout) rootView, FragmentStore, StoreFragmentchipGroup,
          StoreFramgnetRecyclerView, horizontalScrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
